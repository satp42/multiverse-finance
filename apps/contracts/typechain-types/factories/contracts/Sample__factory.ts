/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Sample, SampleInterface } from "../../contracts/Sample";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346101f5576105ed80380380610019816101fa565b928339810190602080828403126101f55781516001600160401b03928382116101f5570192601f908082860112156101f55784518481116101cb57601f1995610067828501881686016101fa565b928284528583830101116101f557849060005b8381106101e15750506000918301015280519384116101cb57600054926001938481811c911680156101c1575b828210146101ab57838111610165575b50809285116001146101005750839450908392916000946100f5575b50501b916000199060031b1c1916176000555b6040516103cd90816102208239f35b0151925038806100d3565b9294849081166000805284600020946000905b8883831061014b5750505010610132575b505050811b016000556100e6565b015160001960f88460031b161c19169055388080610124565b858701518855909601959485019487935090810190610113565b60008052816000208480880160051c8201928489106101a2575b0160051c019085905b8281106101965750506100b7565b60008155018590610188565b9250819261017f565b634e487b7160e01b600052602260045260246000fd5b90607f16906100a7565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920161007a565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101cb5760405256fe60806040818152600436101561001457600080fd5b600091823560e01c908163368b87721461014b575063e21f37ce1461003857600080fd5b346101475781600319360112610147578051825481846100578361035d565b8083529260019081811690811561012557506001146100c9575b5061008192509492940384610325565b815192839160208084528251928382860152825b8481106100b357505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610095565b8680528691507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b84831061010a5750610081935050810160200138610071565b819350908160209254838589010152019101909184926100f1565b90506020925061008194915060ff191682840152151560051b82010138610071565b5080fd5b8334610322576020806003193601126101475760043567ffffffffffffffff9182821161031e573660238301121561031e57816004013583811161030a57601f199261019e601f83018516840188610325565b8187523660248383010111610306578186926024859301838a01378701015284519283116102f2576101d0845461035d565b601f8111610291575b508091601f8411600114610215575050829382939261020a575b50508160011b916000199060031b1c191617815580f35b0151905083806101f3565b8480528316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b878210610279575050836001959610610260575b505050811b01815580f35b015160001960f88460031b161c19169055838080610255565b80600185968294968601518155019501930190610241565b8480527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c8101918386106102e8575b601f0160051c01905b8181106102dd57506101d9565b8581556001016102d0565b90915081906102c7565b634e487b7160e01b84526041600452602484fd5b8580fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b80fd5b90601f8019910116810190811067ffffffffffffffff82111761034757604052565b634e487b7160e01b600052604160045260246000fd5b90600182811c9216801561038d575b602083101461037757565b634e487b7160e01b600052602260045260246000fd5b91607f169161036c56fea2646970667358221220c782aa5c4d6a94c2551980bc989d23f5a420a072867cde8cd346affabb9fdac864736f6c63430008140033";

type SampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sample__factory extends ContractFactory {
  constructor(...args: SampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _message: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_message, overrides || {});
  }
  override deploy(
    _message: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_message, overrides || {}) as Promise<
      Sample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sample__factory {
    return super.connect(runner) as Sample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleInterface {
    return new Interface(_abi) as SampleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sample {
    return new Contract(address, _abi, runner) as unknown as Sample;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OracleManager,
  OracleManagerInterface,
} from "../../contracts/OracleManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_conditionalToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "EventRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "outcome",
        type: "bytes32",
      },
    ],
    name: "EventResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "OracleAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedOracles",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "conditionalToken",
    outputs: [
      {
        internalType: "contract ConditionalToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "events",
    outputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "outcome",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "registrationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "getEventOutcome",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "getEventStatus",
    outputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "outcome",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "registrationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingEvents",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
    ],
    name: "isEventResolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "registerEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setOracleAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eventId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "outcome",
        type: "bytes32",
      },
    ],
    name: "submitOutcome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ea57601f610a9638819003918201601f19168301916001600160401b038311848410176100ef578084926020946040528339810103126100ea57516001600160a01b0390818116908190036100ea5733156100d15760008054336001600160a01b03198216811783556040805195909492167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a360018055608052338152600360205220600160ff198254161790556109909081610106823960805181818161015801526102240152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806329996fcc1461074d57806340212bc9146106b15780634b0ecb301461062957806361c992a3146105eb578063715018a6146105915780638da5cb5b146105695780638ed20f861461053a578063b4184e70146104af578063bfdc4a611461044d578063d5c1a1e1146103cb578063d63509e51461018b578063ea3b3c45146101435763f2fde38b146100b057600080fd5b3461013f57602036600319011261013f576100c96108d0565b906100d26108eb565b6001600160a01b03918216928315610129575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b505034610187578160031936011261018757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091903461018757806003193601126101875782356024918235923385526020956003875260ff8387205416156103935783865260028752828620546001600160a01b0390339082160361035f57600260015414610350576002600155848752600288528387209788549060ff8260a01c166103165787156102e357509560018899829997988260a01b9060ff60a01b191617815501557f000000000000000000000000000000000000000000000000000000000000000016803b156102df57849060448551809781936319ebe1e360e11b83528a878401528b888401525af180156102d5576102a5575b505050507f79536e56297dd7e0c85cb19902c820591cf44fddb262102cd8c92ab8918348c68380a36001805580f35b67ffffffffffffffff84979597116102c4575050529138808080610276565b634e487b7160e01b85526041905283fd5b83513d89823e3d90fd5b8480fd5b83600f8660649389519362461bcd60e51b85528401528201526e496e76616c6964206f7574636f6d6560881b6044820152fd5b8360168660649389519362461bcd60e51b855284015282015275115d995b9d08185b1c9958591e481c995cdbdb1d995960521b6044820152fd5b508251633ee5aeb560e01b8152fd5b5060106064928885519362461bcd60e51b85528401528201526f4e6f74206576656e74206f7261636c6560801b6044820152fd5b60156064928885519362461bcd60e51b8552840152820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152fd5b5050346101875780600319360112610187576103e56108d0565b60243590811515809203610449577f82a8fb1e779ea45ad427cc612e47087f5386a567e49dce488185e40646fa48d5916020916104206108eb565b6001600160a01b031680865260038352848620805460ff191660ff84161790559351908152a280f35b8380fd5b503461013f57602036600319011261013f57358252600260208181529282902080546001820154919092015492516001600160a01b038316815260a09290921c60ff1615159382019390935260408101929092526060820152608090f35b0390f35b5082346105375780600319360112610537578251906020908183019383851067ffffffffffffffff86111761052457509093929182845281815283519485948186019282875251809352850193925b82811061050d57505050500390f35b8351855286955093810193928101926001016104fe565b634e487b7160e01b825260419052602490fd5b80fd5b503461013f57602036600319011261013f578160209360ff9235815260028552205460a01c1690519015158152f35b505034610187578160031936011261018757905490516001600160a01b039091168152602090f35b83346105375780600319360112610537576105aa6108eb565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101875760203660031901126101875760209160ff9082906001600160a01b036106166108d0565b1681526003855220541690519015158152f35b5082903461018757602036600319011261018757358082526002602052828220546001600160a01b03926104ab9285926106669086161515610917565b81526002602052209283549360026001820154910154915194859460ff8260a01c1691168590949392606092608083019660018060a01b031683521515602083015260408201520152565b509134610537576020928360031936011261018757803580835260028552838320549091906106ea906001600160a01b03161515610917565b8183526002855260ff8484205460a01c16156107155750815260028352819020600101549051908152f35b835162461bcd60e51b81529081018590526012602482015271115d995b9d081b9bdd081c995cdbdb1d995960721b6044820152606490fd5b509190346101875780600319360112610187576024356001600160a01b03818116928535928490036102df576107816108eb565b8285526020906002825282818720541661088d578486526003825260ff818720541615610852578051926080840184811067ffffffffffffffff82111761083f5782528584528383018781528483018881524260608701908152878a526002958690529389209551865492516001600160a81b031990931693169290921790151560a01b60ff60a01b16178455516001840155519101557f5f82565df0d26e7eaed24c28a592794743d5efc506b7ed638b0b05226ccd9bc18380a380f35b634e487b7160e01b885260418952602488fd5b5162461bcd60e51b815280870191909152601560248201527413dc9858db19481b9bdd08185d5d1a1bdc9a5e9959605a1b6044820152606490fd5b5162461bcd60e51b815280870191909152601860248201527f4576656e7420616c7265616479207265676973746572656400000000000000006044820152606490fd5b600435906001600160a01b03821682036108e657565b600080fd5b6000546001600160a01b031633036108ff57565b60405163118cdaa760e01b8152336004820152602490fd5b1561091e57565b60405162461bcd60e51b8152602060048201526014602482015273115d995b9d081b9bdd081c9959da5cdd195c995960621b6044820152606490fdfea2646970667358221220b4854e0ef2a8d8b247cc493a70c0daacb020dedd7fb155fa61a28894b013679164736f6c63430008140033";

type OracleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OracleManager__factory extends ContractFactory {
  constructor(...args: OracleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _conditionalToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_conditionalToken, overrides || {});
  }
  override deploy(
    _conditionalToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_conditionalToken, overrides || {}) as Promise<
      OracleManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OracleManager__factory {
    return super.connect(runner) as OracleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleManagerInterface {
    return new Interface(_abi) as OracleManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OracleManager {
    return new Contract(address, _abi, runner) as unknown as OracleManager;
  }
}
